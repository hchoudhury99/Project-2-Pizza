
@model PizzaAPI.Model.OrderPaymentVM
@using Microsoft.AspNetCore.Identity
@using PizzaWeb.Data;
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Create";
}


<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<style>
    body {
        font-family: Arial;
        font-size: 17px;
        padding: 8px;
    }

    * {
        box-sizing: border-box;
    }

    .row {
        display: -ms-flexbox; /* IE10 */
        display: flex;
        -ms-flex-wrap: wrap; /* IE10 */
        flex-wrap: wrap;
        margin: 0 -16px;
    }

    .col-25 {
        -ms-flex: 25%; /* IE10 */
        flex: 25%;
    }

    .col-50 {
        -ms-flex: 50%; /* IE10 */
        flex: 50%;
    }

    .col-75 {
        -ms-flex: 75%; /* IE10 */
        flex: 75%;
    }

    .col-25,
    .col-50,
    .col-75 {
        padding: 0 16px;
    }

    .container {
        background-color: #f2f2f2;
        padding: 5px 20px 15px 20px;
        border: 1px solid lightgrey;
        border-radius: 3px;
    }

    input[type=text] {
        width: 100%;
        margin-bottom: 20px;
        padding: 12px;
        border: 1px solid #ccc;
        border-radius: 3px;
    }

    label {
        margin-bottom: 10px;
        display: block;
    }

    .icon-container {
        margin-bottom: 20px;
        padding: 7px 0;
        font-size: 24px;
    }

    .btn {
        background-color: #4CAF50;
        color: white;
        padding: 12px;
        margin: 10px 0;
        border: none;
        width: 100%;
        border-radius: 3px;
        cursor: pointer;
        font-size: 17px;
    }

        .btn:hover {
            background-color: #45a049;
        }

    a {
        color: #2196F3;
    }

    hr {
        border: 1px solid lightgrey;
    }

    span.price {
        float: right;
        color: grey;
    }

    /* Responsive layout - when the screen is less than 800px wide, make the two columns stack on top of each other instead of next to each other (also change the direction - make the "cart" column go on top) */

    .col-25 {
        margin-bottom: 20px;
    }

    h4 {
        padding-top: 110px;
    }
</style>

<h4>Payment</h4>
<hr />

<div class="row">
    <div class="col-75">
        <div class="container">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="row">
                    <div class="col-50">
                        <h3>Billing Address</h3>
                        <label for="fname"><i class="fa fa-user"></i> Full Name</label>
                        <input type="text" id="fname" name="firstname" value="@UserManager.Users.FirstOrDefault(m => m.UserName == @UserManager.GetUserName(User)).Firstname @UserManager.Users.FirstOrDefault(m => m.UserName == @UserManager.GetUserName(User)).Lastname">
                        <label for="email"><i class="fa fa-envelope"></i> Email</label>
                        <input type="text" id="email" name="email" value="@UserManager.Users.FirstOrDefault(m => m.UserName == @UserManager.GetUserName(User)).Email">
                        @if (Model.order != null)
                        {
                            <label for="address"><i class="fa-address"></i> Address</label>
                            <input type="text" id="address" name="addresss" value = "@this.Model.order.Customer.Address" readonly>
                        }
                        </div>

                    <div class="col-50">
                        <h3>Payment</h3>
                        <label for="fname">Accepted Cards</label>
                        <div class="icon-container">
                            <i class="fa fa-cc-visa" style="color:navy;"></i>
                            <i class="fa fa-cc-amex" style="color:blue;"></i>
                            <i class="fa fa-cc-mastercard" style="color:red;"></i>
                            <i class="fa fa-cc-discover" style="color:orange;"></i>
                        </div>
                        <label for="cname">Name on Card</label>
                        <input type="text" id="cname" name="cardname" value="@UserManager.Users.FirstOrDefault(m => m.UserName == @UserManager.GetUserName(User)).Firstname @UserManager.Users.FirstOrDefault(m => m.UserName == @UserManager.GetUserName(User)).Lastname">
                        <div class="form-group">
                            <label asp-for="payment.CardNo" class="control-label">Credit card number</label>
                            <input asp-for="payment.CardNo" class="form-control" placeholder="1111-2222-3333-4444" />
                            <span asp-validation-for="payment.CardNo" class="text-danger"></span>
                        </div>
                    </div>

                </div>
                <label>
                    <input type="checkbox" checked="checked" name="sameadr"> Shipping address same as billing
                </label>
                <div class="form-group">
                    <input type="submit" value="Continue to checkout" class="btn btn-default" />
                </div>

            </form>
        </div>
    </div>
    <div class="col-25">
        <div class="container">
            @{ int quantity = 0; if (this.Model.order.Pizza != null || this.Model.order.Pizza.Count() != 0) { quantity = this.Model.order.Pizza.Count(); } }
            <div class="form-group">
                <label asp-for="order.OrderId" class="control-label">Credit card number</label>
                <input asp-for="order.OrderId" class="form-control" value="@Model.order.OrderId" />
                <span asp-validation-for="order.OrderId" class="text-danger"></span>
            </div>
            <h4>Cart <span class="price" style="color:black"><i class="fa fa-shopping-cart"></i> <b>@quantity</b></span></h4>
            @if (this.Model.order.Pizza != null || this.Model.order.Pizza.Count() != 0)
            {
                @foreach (var item in this.Model.order.Pizza)
                {
                    <tr>
                        <td>
                            <p><a href="#">@Html.DisplayFor(modelItem => item.PizzaName)</a> <span class="price">$</span></p>
                        </td>
                    </tr>
                }
            }
            <hr>
            <p>Total <span class="price" style="color:black"><b>@Html.DisplayFor(model => model.order.TotalPrice)</b></span></p>
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
